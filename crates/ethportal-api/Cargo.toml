[package]
name = "ethportal-api"
version = "0.5.0"
description = "Definitions for various Ethereum Portal Network JSONRPC APIs"
authors.workspace = true
categories.workspace = true
edition.workspace = true
keywords.workspace = true
license.workspace = true
readme = "README.md"
repository.workspace = true
rust-version.workspace = true

[dependencies]
alloy = { workspace = true, features = ["consensus", "rlp", "rpc-types-eth", "serde"] }
alloy-rlp.workspace = true
alloy-rpc-types-eth = { workspace = true, features = ["serde"] }
anyhow.workspace = true
base64 = { workspace = true }
bimap = { workspace = true }
bytes.workspace = true
c-kzg = { workspace = true }
discv5.workspace = true
eth_trie.workspace = true
ethereum_hashing.workspace = true
ethereum_serde_utils.workspace = true
ethereum_ssz.workspace = true
ethereum_ssz_derive.workspace = true
hex.workspace = true
itertools.workspace = true
jsonrpsee = { workspace = true, features = ["async-client", "client", "macros", "server"]}
keccak-hash.workspace = true
lazy_static.workspace = true
once_cell = { workspace = true }
quickcheck.workspace = true
rand.workspace = true
rs_merkle = { workspace = true }
secp256k1 = { workspace = true, features = ["global-context", "recovery", "rand"] }
serde = { workspace = true, features = ["rc"] }
serde-this-or-that.workspace = true
serde_json.workspace = true
sha2 = { workspace = true }
sha3.workspace = true
ssz_types.workspace = true
superstruct = { workspace = true }
thiserror.workspace = true
tokio.workspace = true
tree_hash.workspace = true
tree_hash_derive.workspace = true
ureq.workspace = true
validator = { workspace = true, features = ["derive"] }

[dev-dependencies]
env_logger.workspace = true
quickcheck.workspace = true
rstest.workspace = true
serde_yaml.workspace = true
snap.workspace = true
test-log.workspace = true
tracing.workspace = true
tracing-subscriber.workspace = true

[build-dependencies]
vergen = { workspace = true, features = ["build", "cargo", "git", "gitcl", "rustc"] }
