version: 2.1
orbs:
  rust: circleci/rust@1.6.0
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: portalnetwork/trin
    docker:
      - image: cimg/rust:1.66.1
jobs:
  docker-build:
    resource_class: xlarge
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          no_output_timeout: 30m
          command: docker build -f ./docker/Dockerfile -t $IMAGE_NAME:latest --build-arg GIT_HASH=$CIRCLE_SHA1 .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  docker-publish:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish docker image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
  lint-build-test:
        description: |
            Check linting with Clippy and rustfmt, build the crate, and run tests.
        resource_class: xlarge
        executor:
            name: rust/default
            tag: 1.66.1
        environment:
            RUSTFLAGS: '-D warnings'
            RUST_LOG: 'debug'
        steps:
            - checkout
            - run:
                name: Prepare for apt upgrades
                command: sudo apt update
            - run:
                name: Install libssl-dev for openssl-sys
                command: sudo apt install -y libssl-dev
            - run:
                name: Install libclang for rocksdb
                command: sudo apt install clang
            - run:
                name: Install rustfmt
                command: rustup component add rustfmt
            - run:
                name: Validate release notes entry
                command: ./newsfragments/validate_files.py
            - run:
                name: Run rustfmt
                command: cargo fmt --all -- --check
            - run:
                name: Install Clippy
                command: rustup component add clippy
            - run:
                name: Run Clippy
                command: cargo clippy --all --all-targets --all-features --no-deps -- --deny warnings
            - run:
                name: Build Trin workspace
                command: cargo build --workspace
            - run:
                name: Test Trin workspace
                command: cargo test --workspace -- --nocapture
  utp-test:
    description: |
      Run uTP network simulator
    machine:
      image: ubuntu-2204:current
    resource_class: xlarge
    environment:
      RUSTFLAGS: '-D warnings'
      RUST_LOG: 'debug'
    steps:
      - checkout
      - run:
          name: Update package sources
          command: sudo apt update
      - run:
          name: Install libssl-dev for openssl-sys
          command: sudo NEEDRESTART_MODE=a apt install -y libssl-dev
      - run:
          name: Install libclang for rocksdb
          command: sudo NEEDRESTART_MODE=a apt install clang
      - run:
          name: Install modprobe
          command: sudo apt install -y kmod
      - run:
          name: Load iptables6 kernel modules
          command: sudo modprobe ip6table_filter
      - run:
          name: Install Rust
          command: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - run:
          name: Build utp-testing package
          command: cargo build --workspace --release
      - run:
          name: Move docker artifacts
          command: mv -t utp-testing/docker/circleci/ target/release/utp-test-app utp-testing/docker/run_endpoint.sh utp-testing/docker/setup.sh
      - run:
          name: Build uTP Test App container
          command: docker build -t test-utp --no-cache utp-testing/docker/circleci/
      - run:
          name: Run Test App with network simulator
          # Dropping packets from both sides of the stream to test dealing with lost packets
          command: SCENARIO="droplist --delay=15ms --bandwidth=10Mbps --queue=25 --drops_to_server=3,5,7 --drops_to_client=6,8" docker-compose -f utp-testing/docker/docker-compose.yml up -d
      - run:
          name: Wait all containers to start
          command: sleep 5
      - run:
          name: Check containers
          command: docker ps -a
      - run:
          name: Run test suite
          command: RUST_LOG=debug ./target/release/utp-test-suite
      - run:
          name: Stop containers
          command: docker-compose -f utp-testing/docker/docker-compose.yml down
workflows:
  merge-test:
    jobs:
      - docker-build:
          filters:
            branches:
              only: master
      - docker-publish:
          requires:
            - docker-build
          filters:
            branches:
              only: master
      - lint-build-test
      - utp-test
